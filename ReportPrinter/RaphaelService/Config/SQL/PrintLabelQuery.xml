<?xml version="1.0" encoding="utf-8"?>
<SqlTemplate Id="LabelPrintQuery" >
	<Sql Id="SplitCaseContainer" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str NVARCHAR(MAX)
				DECLARE @parm_def NVARCHAR (100)

				SET @sql_str=  N'
					;WITH PrefixLength AS 
					(
						SELECT
							CAST(COALESCE(s.rp_Val, a.PrefixLength) AS INT) AS PrefixLength
						FROM
							(SELECT ''3'' AS PrefixLength) a LEFT JOIN rp_sys_config s ON (s.rp_module = ''ReportServer''
																					AND s.rp_rule      = ''SplitCaseLabel''
																					AND s.rp_category  = ''ConNote''
																					AND s.rp_param     = ''PrefixLength''
																					) 
					), PrefixLength300 AS 
					(
						SELECT
							CAST(COALESCE(s.rp_Val, a.PrefixLength) AS INT) AS PrefixLength
						FROM
							(SELECT ''3'' AS PrefixLength) a LEFT JOIN rp_sys_config s ON (s.rp_module = ''ReportServer''
																					AND s.rp_rule      = ''SplitCaseLabel''
																					AND s.rp_category  = ''ConNote''
																					AND s.rp_param     = ''PrefixLength300''
																					) 
					)
					SELECT
						mw.*,
						c.rp_container_ck,
						c.rp_carrier_barcode,
						mw.DeliveryAddress1,
						w.rp_priority,
						(
						SELECT
							SUBSTRING(mw.ConNote, 1, p.PrefixLength) + ''>5'' + SUBSTRING(mw.ConNote, p.PrefixLength + 1, LEN(mw.ConNote) - p.PrefixLength) 
						FROM
							PrefixLength p
						) AS ConNote_Barcode,
						(
						SELECT
							SUBSTRING(mw.ConNote, 1, p.PrefixLength) + ''>5'' + SUBSTRING(mw.ConNote, p.PrefixLength + 1, LEN(mw.ConNote) - p.PrefixLength) 
						FROM
							PrefixLength300 p
						) AS ConNote_Barcode300,
						CONVERT(NUMERIC(12,3), COALESCE(c.rp_act_weight, ct.rp_weight + containerWeight, 0) / 1000000.0) AS rp_act_weight,
						SUBSTRING(mw.DeliveryAddress1, 1, 26)  AS DeliveryAddress1_Line1,
						SUBSTRING(mw.DeliveryAddress1, 27, 52) AS DeliveryAddress1_Line2
					FROM
						rp_container c 
							INNER JOIN rp_con_type ct ON (c.rp_con_type_ftk = ct.rp_con_type_tk)
							INNER JOIN rp_allocation a ON (a.rp_container_ftk = c.rp_container_tk)
							INNER JOIN rp_work w ON (w.rp_work_tk = a.rp_work_ftk)
							INNER JOIN uvw_misc_work mw ON (w.rp_misc_ftk = mw.rp_misc_tk)
							OUTER APPLY
							(
								SELECT 
									SUM(IIF(t.rp_closed IS NULL, t.rp_qty_req, t.rp_qty_placed) * pr.rp_unit_weight) AS containerWeight
								FROM
									rp_task t
									INNER JOIN rp_product pr ON t.rp_product_ftk = pr.rp_product_tk
								WHERE
									ct.rp_con_type_id = ''Esky''
								AND w.rp_work_tk = t.rp_work_ftk
							) weightCalculation
					WHERE
						c.rp_container_ck = @ContainerID
					AND c.rp_markedForDeletion IS NULL'
								
				SET @parm_def=N'@ContainerID VARCHAR(40)'

				EXEC sp_executesql @sql_str,@parm_def, %%%ContainerID%%%
			]]>
		</Query>
		<Variable Name="ContainerID" />
	</Sql>

	<Sql Id="FullCaseContainer" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str NVARCHAR(MAX)
				DECLARE @parm_def NVARCHAR (100)

				SET @sql_str=  N'
					;WITH PrefixLength AS 
					(
						SELECT
							CAST(COALESCE(s.rp_Val, a.PrefixLength) AS INT) AS PrefixLength
						FROM
							(SELECT ''3'' AS PrefixLength) a LEFT JOIN rp_sys_config s ON (s.rp_module = ''ReportServer''
																					AND s.rp_rule      = ''FullCaseLabel''
																					AND s.rp_category  = ''ConNote''
																					AND s.rp_param     = ''PrefixLength''
																					) 
					)
					SELECT
						s.rp_sku_id
						, pr.rp_manufacturer AS Manufacturer
						, pr.rp_uom
						, m.rpd_data AS rp_location_id
						, s.rp_desc
						, SUBSTRING(s.rp_desc, 1 , 40)  AS rp_desc_1
						, SUBSTRING(s.rp_desc, 41, 80)  AS rp_desc_2
						, SUBSTRING(s.rp_desc, 81, 120) AS rp_desc_3
						, t.rp_qty_req AS Qty,
						w.rp_priority,
						CONVERT(NUMERIC(12,3), COALESCE(IIF(t.rp_closed IS NULL, t.rp_qty_req, t.rp_qty_placed) * pr.rp_unit_weight, 0) / 1000000.0) AS rp_act_weight,
						mw.*,
						(
						SELECT
							SUBSTRING(mw.ConNote, 1, p.PrefixLength) + ''>5'' + SUBSTRING(mw.ConNote, p.PrefixLength + 1, LEN(mw.ConNote) - p.PrefixLength) 
						FROM
							PrefixLength p
						) AS ConNote_Barcode,
						c.rp_container_ck,
						c.rp_carrier_barcode,
						c.rp_checkdigit,
						mw.DeliveryAddress1,
						SUBSTRING(mw.DeliveryAddress1, 1, 26)  AS DeliveryAddress1_Line1,
						SUBSTRING(mw.DeliveryAddress1, 27, 52) AS DeliveryAddress1_Line2
					FROM
						rp_container c 
							INNER JOIN rp_allocation a ON (a.rp_container_ftk = c.rp_container_tk)
							INNER JOIN rp_work w ON (w.rp_work_tk = a.rp_work_ftk)
							INNER JOIN uvw_misc_work mw ON (w.rp_misc_ftk = mw.rp_misc_tk)
							INNER JOIN rp_task t ON (c.rp_container_tk = t.rp_d_con_ftk)
							INNER JOIN rp_passage p ON (t.rp_passage_ftk = p.rp_passage_tk)
							INNER JOIN rp_sku s ON (t.rp_sku_ftk = s.rp_sku_tk)
							LEFT JOIN rpd_misc m ON p.rp_misc_ftk = m.rp_misc_tk AND m.rp_table_name = ''rp_passage'' AND m.rp_type = ''Loc''
							LEFT JOIN rp_product pr ON (t.rp_sku_ftk = pr.rp_sku_ftk AND p.rp_uom = pr.rp_uom)
					WHERE
						c.rp_container_ck = @ContainerID
					AND c.rp_markedForDeletion IS NULL
					ORDER BY
						s.rp_sku_id
						, pr.rp_uom
						, m.rpd_data
						, s.rp_desc'
								
				SET @parm_def=N'@ContainerID VARCHAR(40)'		

				EXEC sp_executesql @sql_str,@parm_def, %%%ContainerID%%%
			]]>
		</Query>
		<Variable Name="ContainerID" />
	</Sql>

	<Sql Id="BatchStart" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str NVARCHAR(MAX)
				DECLARE @parm_def NVARCHAR (100)

				SET @sql_str=  N'
					SELECT 
						SUBSTRING(L1.rp_zone_id,1,2) AS ZoneID
						,LEFT(w.rp_work_id, 5) BatchID
						FROM
						rp_container C
						INNER JOIN rp_allocation a ON a.rp_container_ftk = c.rp_container_tk
						INNER JOIN rp_work w ON a.rp_work_ftk = w.rp_work_tk		
						INNER JOIN rp_passage p ON p.rp_work_ftk = w.rp_work_tk
						--INNER JOIN rp_work W2 ON W2.rp_work_tk = c.rp_batch_ftk
						INNER JOIN uvw_LocBayModuleZone l1 ON l1.rp_location_tk = p.rp_location_ftk 
					WHERE
						w.rp_work_id = @Batch_ID'
								
				SET @parm_def=N'@Batch_ID VARCHAR(30)'

				EXEC sp_executesql @sql_str,@parm_def, %%%Batch_ID%%%
			]]>
		</Query>
		<Variable Name="Batch_ID" />
	</Sql>

	<Sql Id="GetBatchContainersQuery" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str nvarchar(MAX)
				DECLARE @parm_def nvarchar (500)

				SET @sql_str=  N'SELECT c.rp_container_ck, w.rp_work_id, w.rp_work_tk
								FROM  dbo.rp_container AS c
								INNER JOIN dbo.rp_allocation AS a ON c.rp_container_tk = a.rp_container_ftk
								INNER JOIN dbo.rp_work AS w ON a.rp_work_ftk = w.rp_work_tk 
								WHERE  
									c.rp_batch_ftk = @BATCH_TK						
								AND c.rp_markedForDeletion IS NULL
								AND	CAST(c.rp_checkdigit AS INT) >= CAST(@FROM AS INT)
								AND CAST(c.rp_checkdigit AS INT) <= CAST(@TO AS INT)
								ORDER BY CAST(c.rp_checkdigit AS INT)'
								
				SET @parm_def=N'@BATCH_TK int, @FROM varchar(10), @TO varchar(10)'

				EXEC sp_executesql @sql_str,@parm_def, %%%Batch_TK%%% %%%From%%%, %%%To%%%
			]]>
		</Query>
		<Variable Name="Batch_TK" />
		<Variable Name="From" />
		<Variable Name="To" />
	</Sql>

	<Sql Id="GetWorkIDQuery" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str nvarchar(1000)
				DECLARE @parm_def nvarchar (500)

				SET @sql_str=  N'
					SELECT rp_work_id 
					FROM dbo.rp_work 
					WHERE rp_work_tk = @WORK_TK'
								
				SET @parm_def=N'@WORK_TK int'

				EXEC sp_executesql @sql_str,@parm_def, %%%WorkTK%%%
			]]>
		</Query>
		<Variable Name="WorkTK" />
	</Sql>

	<Sql Id="GetContainerIDQuery" DatabaseId="PD">
		<Query>
			<![CDATA[
				DECLARE @sql_str nvarchar(1000)
				DECLARE @parm_def nvarchar (500)

				SET @sql_str=  N'	
					SELECT rp_container_ck
					FROM dbo.rp_container
					WHERE rp_container_tk = @CONT_TK'
								
				SET @parm_def=N'@CONT_TK int'

				EXEC sp_executesql @sql_str,@parm_def, %%%ConTK%%%
			]]>
		</Query>
		<Variable Name="ConTK" />
	</Sql>

	<Sql Id="GetWorkQuery" DatabaseId="PD">
		<Query>
			<![CDATA[
				SELECT TOP 20
					ROW_NUMBER() OVER(ORDER BY w.rp_work_tk) AS Id
					, w.rp_work_id
					, w.rp_priority
					, w.rp_status
					, w.rp_passages
					, w.rp_received
					, w.rp_misc_ftk
					, 327 + 40*(ROW_NUMBER() OVER(ORDER BY w.rp_work_tk)) AS Y	-- this field is for ZPL template support
				FROM
					dbo.rp_work w
			]]>
		</Query>
	</Sql>
</SqlTemplate>